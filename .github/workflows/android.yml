name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]

jobs:
  lint:
    name: Spotless check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3.1.0
      - name: Set up JDK
        uses: actions/setup-java@v3.5.1
        with:
          distribution: 'zulu'
          java-version: 17
      - name: spotless
        run: ./gradlew spotlessCheck

  api_check:
    name: API check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3.1.0
      - name: Set up JDK
        uses: actions/setup-java@v3.5.1
        with:
          distribution: 'zulu'
          java-version: 17
      - name: API check
        run: ./gradlew apiCheck

  build:
    runs-on: macos-latest
    timeout-minutes: 55
    steps:
      - uses: actions/checkout@v3.1.0

      - name: set up JDK
        uses: actions/setup-java@v3.5.1
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      # Cleans managed device if previously settle and space currently is not available
      - name: Clean Managed Devices
        run: ./gradlew cleanManagedDevices --unused-only

      # Build Android modules with managed devices options
      - name: Build with Gradle
        run: ./gradlew build -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect" -Pandroid.experimental.testOptions.managedDevices.setupTimeoutMinutes=20 -Pandroid.testInstrumentationRunnerArguments.androidx.benchmark.enabledRules=BaselineProfile
